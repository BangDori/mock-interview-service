import { Question } from '@custom/types/Question';

const cs: Question[] = [
  {
    id: 1,
    text: '브라우저 렌더링 원리를 설명해보세요.',
  },
  {
    id: 2,
    text: '주소창에 www.google.com을 입력하면 생기는 일을 설명해주세요.',
  },
  {
    id: 3,
    text: '웹 프로토콜이란?',
  },
  {
    id: 4,
    text: 'HTTP와 HTTPS의 차이점을 말해주세요.',
  },
  {
    id: 5,
    text: 'RESTFUL API란?',
  },
  {
    id: 6,
    text: 'get, post 차이를 설명해주세요.',
  },
  {
    id: 7,
    text: '브라우저 저장소 (로컬 스토리지, 세션 스토리지, 쿠키의 차이)',
  },
  {
    id: 8,
    text: 'JWT란?',
  },
  {
    id: 9,
    text: 'CORS란?',
  },
  {
    id: 10,
    text: 'MVC와 MVVM 패턴의 차이를 설명해주세요.',
  },
  {
    id: 11,
    text: 'OOP (Object Oriented Programming)란 무엇인가요?',
  },
  {
    id: 12,
    text: 'CSR과 SSR의 차이를 설명해주세요.',
  },
  {
    id: 13,
    text: 'SPA와 MPA의 차이를 설명해주세요.',
  },
  {
    id: 14,
    text: 'Git을 사용해보셨나요? Git에 대해 아는 것을 말해보세요.',
  },
  {
    id: 16,
    text: '깊은복사와 얕은복사의 차이점을 말해주세요.',
  },
  {
    id: 17,
    text: '크로스 브라우징이란?',
  },
  {
    id: 19,
    text: '라이브러리와 프레임워크에 대해 설명해주세요.',
  },
  {
    id: 20,
    text: 'DNS에 대해 설명해주세요.',
  },
  {
    id: 21,
    text: 'REST API에 대해 설명해주세요.',
  },
  {
    id: 22,
    text: '자료구조 stack과 queue에 대해 설명해주세요.',
  },
  {
    id: 23,
    text: '프로세스와 스레드에 대해 설명해주세요.',
  },
  {
    id: 24,
    text: '어떤 프레임워크를 사용하여 개발했나요? 왜 그 프레임워크를 선택했나요?',
  },
  {
    id: 25,
    text: 'RESTful API에 대해 설명해주세요.',
  },
  {
    id: 26,
    text: 'HTTP 메소드에 대한 설명을 해주실 수 있나요?',
  },
  {
    id: 27,
    text: 'CSRF나 XSS 공격을 막는 방법은?',
  },
  {
    id: 28,
    text: 'HTTP의 PUT, PATCH를 비교 설명해주세요.',
  },
  {
    id: 29,
    text: 'HTTP의 Status Code에 대해 설명해주세요.',
  },
  {
    id: 30,
    text: 'HTTPS의 동작 방식에 대해 설명해주세요.',
  },
  {
    id: 31,
    text: 'TCP와 UDP를 비교 설명해주세요.',
  },
  {
    id: 32,
    text: 'TCP가 신뢰성을 보장하는 방법에 대해 설명해주세요.',
  },
  {
    id: 33,
    text: 'TCP의 3-Way-Handshake와 4-Way-Handshake에 대해 설명해주세요.',
  },
  {
    id: 34,
    text: '운영체제의 정의에 대해 설명해주세요.',
  },
  {
    id: 35,
    text: '운영체제의 메모리 영역에 대해 설명해주세요.',
  },
  {
    id: 36,
    text: '프로세스와 스레드를 비교 설명해주세요.',
  },
  {
    id: 37,
    text: '스레드에서 독립적인 Stack 메모리 영역이 필요한 이유에 대해 설명해주세요.',
  },
  {
    id: 38,
    text: '멀티 프로세스와 멀티 스레드를 비교 설명해주세요.',
  },
  {
    id: 39,
    text: '문맥 전환 (Context Switch)에 대해 설명해주세요.',
  },
  {
    id: 40,
    text: '교착상태 (Deadlock)에 대해 설명해주세요.',
  },
  {
    id: 41,
    text: '교착상태의 발생 조건에 대해 설명해주세요.',
  },
  {
    id: 42,
    text: '페이징과 세그멘테이션에 대해 설명해주세요.',
  },
  {
    id: 43,
    text: '메모리 단편화에 대해 설명해주세요.',
  },
  {
    id: 44,
    text: '기아 상태에 대해 설명해주세요.',
  },
  {
    id: 45,
    text: '경쟁 상태에 대해 설명해주세요.',
  },
  {
    id: 46,
    text: '뮤텍스와 세마포어에 대해 설명해주세요.',
  },
  {
    id: 47,
    text: '가상 메모리에 대해 설명해주세요.',
  },
  {
    id: 48,
    text: '페이지 교체 알고리즘을 아는대로 설명해주세요.',
  },
  {
    id: 49,
    text: '요구 페이징에 대해 설명해주세요.',
  },
  {
    id: 50,
    text: '스택과 큐의 차이점에 대해 설명해주세요.',
  },
  {
    id: 51,
    text: '좋은 코드의 조건이 뭘까요?',
  },
  {
    id: 52,
    text: '좋은 알고리즘의 조건이 뭘까요?',
  },
  {
    id: 53,
    text: '정확도가 동일하다면 그 다음으로 고려해야 될 조건이 뭘까요?',
  },
  {
    id: 54,
    text: '시간 복잡도는 매우 낮지만 메모리를 매우 많이 사용한다면 어떻게 대처할 수 있을까요?',
  },
  {
    id: 55,
    text: '완벽한 보안을 갖출 수 있는 알고리즘이 있을까요?',
  },
  {
    id: 56,
    text: '알고리즘은 어떻게 공부하셨나요?',
  },
  {
    id: 57,
    text: '풀었던 알고리즘 문제 중에서 어려웠던 개념은 어떤게 있나요?',
  },
  {
    id: 58,
    text: '재귀를 사용하지 않고 DFS와 BFS를 구현한다면 어떻게 할 수 있을까요?',
  },
  {
    id: 59,
    text: 'Array와 연결 리스트를 비교 설명해주세요.',
  },
  {
    id: 60,
    text: '단일 연결 리스트와 이중 연결 리스트를 비교 설명해주세요.',
  },
  {
    id: 61,
    text: '힙에 대해 설명해주세요.',
  },
  {
    id: 62,
    text: '이진 트리와 완전 이진 트리에 대해 설명해주세요.',
  },
  {
    id: 63,
    text: '해시 테이블에 대해 설명해주세요.',
  },
  {
    id: 64,
    text: '좋은 해시 함수의 조건은 뭘까요?',
  },
];

export default cs;
